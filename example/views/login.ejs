<!DOCTYPE html>
<html lang="en">
<head>
    <title>Login</title>
</head>
<body>
<h1>Login</h1>
<form id="login-form">
    <input type="text" id="username" name="username" placeholder="Enter Username" required>
    <button type="submit">Login</button>
</form>

<script>
    function base64UrlEncode(buffer) {
        return btoa(String.fromCharCode(...new Uint8Array(buffer)))
            .replace(/\+/g, "-") // Convert '+' to '-'
            .replace(/\//g, "_") // Convert '/' to '_'
            .replace(/=+$/, ""); // Remove padding '='
    }

    document.getElementById('login-form').addEventListener('submit', async (event) => {
        event.preventDefault();
        const username = document.getElementById('username').value;
        if (!username) return alert("Username is required!");

        try {
            const optionsRes = await fetch('/login/options', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ username })
            });

            const options = await optionsRes.json();

            console.log("Authentication options:", options);

            const credential = await navigator.credentials.get({ publicKey: options });

            if (!credential) {
                throw new Error("Failed to get authentication credential.");
            }

            console.log("Authentication credential:", credential);

            const credentialResponse = {
                id: credential.id,
                type: credential.type,
                rawId: base64UrlEncode(credential.rawId),
                response: {
                    clientDataJSON: base64UrlEncode(credential.response.clientDataJSON),
                    authenticatorData: base64UrlEncode(credential.response.authenticatorData),
                    signature: base64UrlEncode(credential.response.signature),
                    userHandle: credential.response.userHandle ? base64UrlEncode(credential.response.userHandle) : null
                }
            };

            console.log("Formatted credential response:", credentialResponse);

            const loginRes = await fetch('/login', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ username, response: credentialResponse })
            });

            if (!loginRes.ok) {
                const errorText = await loginRes.text();
                console.error("Login error:", errorText);
                throw new Error("Login failed. " + errorText);
            }

            alert("Login successful!");
            window.location.href = "/dashboard";

        } catch (error) {
            console.error("Login error:", error);
            alert("Login failed. Check the console for details.");
        }
    });
</script>
</body>
</html>