name: build
on:
  push:
    branches:
      - main
    tags:
      - '!*' # Do not execute on tags
    paths:
      - src/*
      - test/*
      - '*.json'
      - package-lock.json
  pull_request:
    paths:
      - '!*.MD'

jobs:
  test:
    strategy:
      matrix:
        platform: [ ubuntu-latest ]
        node: [ '21' ]
    name: test/node ${{ matrix.node }}/${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      # Install dependencies using npm (using npm ci for a clean install)
      - run: npm ci
      # Build the project using the build script defined in package.json
      - run: npm run build
      # Run tests using the test script defined in package.json
      - run: npm test

  coverage:
    needs: [ test ]
    name: coverage
    runs-on: ubuntu-latest
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '21'
      - run: npm ci
      - run: npm run build
      # Run the coverage command. Note: We are using 'test:coverage' as defined in package.json.
      - uses: paambaati/codeclimate-action@v5
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageCommand: npm run test:coverage
          debug: true